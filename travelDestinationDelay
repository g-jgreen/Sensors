{
    "name": "travelDestinationDelay",
    "version": "1.0.1",
    "type": "sensor",
    "script": "/*var response = {\n  \"travelTimes\": [\n    {\n      \"from\": \"Antwerpen\",\n      \"to\": \"Gent\",\n      \"current_time\": 39,\n      \"normal_time\": 33,\n      \"delay\": 6\n    },\n    {\n      \"from\": \"Brussels\",\n      \"to\": \"Gent\",\n      \"current_time\": 28,\n      \"normal_time\": 25,\n      \"delay\": 3\n    },\n    {\n      \"from\": \"Gent\",\n      \"to\": \"Antwerpen\",\n      \"current_time\": 53,\n      \"normal_time\": 30,\n      \"delay\": 23\n    },\n    {\n      \"from\": \"Gent\",\n      \"to\": \"Brussels\",\n      \"current_time\": 66,\n      \"normal_time\": 29,\n      \"delay\": 37\n    }\n  ]\n};*/\n\n\nvar response = options.rawData[options.requiredProperties.travelNode];\n\nif(response !== undefined && options.requiredProperties.from !== undefined && options.requiredProperties.to !== undefined) {\n  var item = __.findWhere(response.travelTimes,{ from: options.requiredProperties.from, to: options.requiredProperties.to });\n  var state = \"error\";\n  if(item !== undefined){\n    if(item.delay >  45){\n        item.dalayMessage = 'Huge delay';\n        state = \"Huge delay\";\n    }\n    else if(item.delay >  20){\n       state = \"Big delay\"; \n       item.dalayMessage = 'Big delay';\n    }\n    else {\n        item.dalayMessage = \"Normal\";\n        state = \"Normal\";\n    }\n  }\n  var value = {\n    observedState: state,\n    rawData: item\n  };\n  send(null, value);\n}else{\n  send(new Error(\"Missing properties from / to OR travel Node not correct\"));\n}\n",
    "metadata": {
        "author": "",
        "category": "Smart City",
        "description": "travelDestinationDelay\n\nInput parameters are:\n<ul>\n<li>from city</li>\n<li>to city</li>\n<li>travel Node, node that extracts travel data</li>\n</ul>\n\n",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/delay.png",
        "supportedStates": [
            "Normal",
            "Big delay",
            "Huge delay",
            "error"
        ],
        "requiredProperties": [
            "from",
            "to",
            "travelNode"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "from",
                "dataType": "double"
            },
            {
                "parameter": "to",
                "dataType": "double"
            },
            {
                "parameter": "delay",
                "dataType": "double"
            },
            {
                "parameter": "dalayMessage",
                "dataType": "double"
            },
            {
                "parameter": "current_time",
                "dataType": "double"
            },
            {
                "parameter": "normal_time",
                "dataType": "double"
            }
        ]
    }
}
