{
  "name": "getGoogleSheet",
  "version": "0.0.5",
  "type": "sensor",
  "script": "var props = options.requiredProperties;\nvar profile = props.profile\nvar clientId = options.globalSettings.DASHBOARD_KEY\nvar clientSecret = options.globalSettings.DASHBOARD_SECRET\nvar range = encodeURIComponent(props.range)\nvar sheetId = props.sheetId\nvar dashboardDomain = options.globalSettings.DASHBOARD_DOMAIN;\n\nvar tokenFromCache = waylayUtil.getCacheData(options, \"token\");\nvar getToken = function(callback){\n  var options = {\n        url: \"https://\"+dashboardDomain+\"/api/token/googledrive/\" + profile,\n        auth: {\n            user: clientId,\n            password: clientSecret\n        }\n  };\n  request(options, function(error, response, body) {\n      if (!error && response.statusCode == 200) {\n          var bodyJson = JSON.parse(body);\n          console.log(\"token\", bodyJson)\n          callback(null, bodyJson.accessToken);\n      }else{\n          callback(new Error(\"Calling api token: \" + error + \" \" + body + options.url));\n      }\n  });\n};\nvar getSheet = function(token){\n    var options ={\n        url:\"https://content-sheets.googleapis.com/v4/spreadsheets/\"+sheetId+\"/values/\"+range,\n        auth:{\n            'bearer': token\n        }\n    };\n    \n    var callback = function(error, response, body) {\n        console.log(body)\n        if (!error && !JSON.parse(body).error) {\n            var value = {\n                observedState : \"Found\",\n                rawData: {\n                    data: JSON.parse(body).values\n                }\n            };\n            send(null,value);\n        } else{\n            console.log(body);\n            send(new Error(\"Call failed \"+ body));\n        }\n    };\n    console.log(\"options\", options)\n    request.get(options, callback);\n}\nif(profile !== undefined){\n getToken(function(err, token){\n    if(err){\n      if(tokenFromCache !== undefined){\n          console.log(\"try with an old token, since the request to the dashboard failed\");\n          getSheet({accessToken: tokenFromCache});\n      }\n    }else{\n      getSheet(token);\n    }\n  });\n}\nelse{\n    send(new Error(\"Missing properties\"));\n}\n",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "getGoogleSheet\n\nrange is in format <bold>APP1!A1:D5</bold>\n",
    "documentationURL": "",
    "iconURL": "https://static.waylay.io/plugs/icons/sheets.png",
    "supportedStates": [
      "Found",
      "NotFound"
    ],
    "requiredProperties": [
      "profile",
      "sheetId",
      "range"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "values",
        "dataType": "object[]"
      }
    ]
  }
}
