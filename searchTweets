{
    "metadata": {
        "author": "",
        "category": "Social",
        "description": "Search tweets sensor",
        "documentationURL": "https://dev.twitter.com/rest/reference/get/search/tweets",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/tweet.png",
        "supportedStates": [
            "Found",
            "Not Found"
        ],
        "requiredProperties": [
            "searchTerms",
            "user"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "tweets",
                "dataType": "string[]"
            },
            {
                "parameter": "since_id",
                "dataType": "double"
            },
            {
                "parameter": "count",
                "dataType": "double"
            }
        ]
    },
    "script": "var OAuthConsumerKey = options.globalSettings.OAuthConsumerKey;\nvar OAuthConsumerSecret = options.globalSettings.OAuthConsumerSecret;\nvar OAuthAccessToken = options.globalSettings.OAuthAccessToken;\nvar OAuthAccessTokenSecret = options.globalSettings.OAuthAccessTokenSecret;\n\nvar client = new twitter({\n  consumer_key: OAuthConsumerKey,\n  consumer_secret: OAuthConsumerSecret,\n  access_token_key: OAuthAccessToken,\n  access_token_secret: OAuthAccessTokenSecret\n});\n\nvar searchTerms = options.requiredProperties.searchTerms;\nvar user = options.requiredProperties.user;\nvar query = {q: searchTerms, count:100};\nvar since_id, url;\n\nif(user === undefined){\n    url = 'search/tweets';\n} else {\n    url = 'statuses/user_timeline.json';\n    query.screen_name = user;\n}\n\n/*\nThis problem is avoided by setting the since_id parameter to the greatest ID of all the Tweets \nyour application has already processed. Unlike max_id the since_id parameter is not inclusive, \nso it is not necessary to adjust the ID in any way. As shown in the following image, \nTwitter will only return Tweets with IDs higher than the value passed for since_id.\n*/\n \nsince_id = waylayUtil.getCacheData(options,\"since_id\");\nif(since_id)\n    query[\"since_id\"] = since_id;\n\nif(searchTerms) {\n    try{\n        client.get(url, query, function(error, tweets, response){\n        //console.log(tweets);\n        if(user === undefined){\n            tweets = tweets.statuses;\n        }\n        var latestTweet = __.max(tweets, function(tweet){ return tweet.id; });\n        var value = {\n            observedState : tweets.length > 0? \"Found\" : \"Not Found\",\n            rawData:  {\n                count: tweets.length,\n                tweets: tweets\n            }\n        }\n        if(latestTweet && latestTweet.id)\n          value.rawData[\"since_id\"] = latestTweet.id;\n        else if(since_id)\n            value.rawData[\"since_id\"] = since_id;\n        send(null, value);\n        });\n    } catch(err){\n        send(err);\n}\n} else {\n     send(new Error(\"Missing search term\"));\n}",
    "name": "searchTweets",
    "version": "1.0.1",
    "type": "sensor"
}
