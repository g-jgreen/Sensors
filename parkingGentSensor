{
    "name": "parkingGentSensor",
    "version": "0.0.5",
    "type": "sensor",
    "script": "var latitude = options.requiredProperties.latitude;\nvar longitude = options.requiredProperties.longitude;\n//if location given, we will search for the parking spot that is free and closest to the given location\n\ntry{\n    var url =\"http://datatank.gent.be/Mobiliteitsbedrijf/Parkings11.json\";\n    request({\n            \"uri\": url\n        }, function(err, response, body){\n            if (!err && response.statusCode == 200) {\n                var data = JSON.parse(body);\n                //console.log(data);\n                var parkings = data.Parkings11.parkings;\n                var notFullParkings = __.filter(parkings, function(parking) {return !parking.full && parking.open;});\n                notFullParkings = __.sortBy(notFullParkings,\"availableCapacity\").reverse();\n                var rawData = { parkings : parkings, notFullParkings: notFullParkings};\n                if(latitude && longitude){\n                    var bestLocation = __.min(parkings, function(parking){ \n                        //console.log(parking.latitude);\n                        var dist = waylayUtil.getDistance(latitude, longitude, parking.latitude, parking.longitude);\n                        console.log(dist);\n                        return dist;\n                        });\n                    if(bestLocation){\n                        bestLocation.distance =  waylayUtil.getDistance(latitude, longitude, bestLocation.latitude, bestLocation.longitude);\n                        rawData.bestLocation = bestLocation;\n                        console.log(bestLocation);\n                    }\n                }\n                var value ={\n                    observedState : notFullParkings.length > 0 ? \"Found\" : \"Not Found\",\n                    rawData : rawData\n                }\n               send(null, value);\n            } else {\n                console.log(response);\n                send(new Error(response.statusCode));\n            }\n    });    \n} catch(err){\n    send(new Error(err));\n}\n",
    "metadata": {
        "author": "",
        "category": "Smart City",
        "description": "Parking Gent\n\nInput paramters are:\n<ul>\n<li>latitudute, not required</li>\n<li>longitude, not required</li>\n</ul>\n\nIf geo coordinates are given it will return back the parking that is not full \nthat is closest to that location (bestLocation). Otherwise, it will\nonly return array of objects:\n<ul>\n<li>parkings, list of all parkings</li>\n<li>notFullParkings, sorted list of parkings that are not full</li>\n</ul>\nIf there is no free parking, it will return \"Not Found\"",
        "documentationURL": "http://datatank.gent.be/Mobiliteitsbedrijf/Parkings11.jso",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/parking.png",
        "supportedStates": [
            "Found",
            "Not Found"
        ],
        "requiredProperties": [
            "latitude",
            "longitude"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "parkings",
                "dataType": "object[]"
            },
            {
                "parameter": "notFullParkings",
                "dataType": "object[]"
            },
            {
                "parameter": "bestLocation",
                "dataType": "object"
            }
        ]
    }
}
