{
  "name": "lightSensor",
  "version": "0.0.4",
  "type": "sensor",
  "script": "var parameter = options.requiredProperties.parameter;\nvar username =  options.globalSettings.API_KEY;\nvar password = options.globalSettings.API_PASS;\nvar domain = options.requiredProperties.domain || options.globalSettings.waylay_domain ||\"app.waylay.io\";\nvar resource = options.requiredProperties.resource || waylayUtil.getResource(options) \n\nvar sendResult = function(rawData){\n    console.log(\"runtime\" , rawData);\n    var value = {\n        observedState : \"Error\"\n    }\n    if((rawData.on !== undefined && rawData.on === 0) || (rawData.power !== undefined && rawData.power === 'off') )\n        value.observedState = \"OFF\";\n    if((rawData.on !== undefined && rawData.on === 1) || (rawData.power !== undefined && rawData.power === 'on') ){\n        value.observedState = \"ON\";\n        if(rawData.color !== undefined){\n            if(rawData.color === 'red' || rawData.color === 'FF0000' )\n                value.observedState = \"RED\";\n            if(rawData.color === 'blue' || rawData.color === '0000FF')\n                value.observedState = \"BLUE\";\n            if(rawData.color === 'green' || rawData.color === '00FF00')\n                value.observedState = \"GREEN\";\n            if(rawData.color === 'green' || rawData.color === 'FFFF00')\n                value.observedState = \"YELLOW\";   \n        }\n        if(rawData.color_hue !== undefined && value.observedState ===\"ON\"){\n            console.log(\"HUE based color estimation\")\n            if(rawData.color_hue  < 55)\n                value.observedState = \"RED\";\n            if(rawData.color_hue  > 54 && rawData.color_hue  < 65)\n                value.observedState = \"YELLOW\";\n            if(rawData.color_hue  > 64 && rawData.color_hue  < 180)\n                value.observedState = \"GREEN\";\n            if(rawData.color_hue  > 179)\n                value.observedState = \"BLUE\";\n             if(rawData.color_hue  > 300)\n                value.observedState = \"RED\"; \n        }\n        if(rawData.color_temperature !== undefined && value.observedState ===\"ON\"){\n            console.log(\"color temperature based color estimation\")\n            if(rawData.color_temperature  < 1501)\n                value.observedState = \"RED\";\n            if(rawData.color_temperature  > 1500 && rawData.color_temperature  < 5001)\n                value.observedState = \"YELLOW\";\n            if(rawData.color_temperature  > 5000 && rawData.color_temperature  < 7001)\n                value.observedState = \"GREEN\";\n            if(rawData.color_temperature  > 7000)\n                value.observedState = \"BLUE\";    \n        }\n        \n    }\n    send(null, value);\n}\n\nvar runtimeParam = waylayUtil.getStreamData(options, parameter);\nif(runtimeParam !== undefined){\n    console.log(\"runtime data : \" + runtimeParam);\n    sendResult();\n} else{\n    if(domain !== undefined  && username !== undefined && password !== undefined && resource !== undefined)  {\n        var url = \"https://data.waylay.io/resources/\"+ resource +\"/current?domain=\"+domain;\n        var options = {\n            url: url,\n            method: 'GET',\n            auth: {\n                user: username,\n                password: password\n            }\n        };\n        request(options, function (error, response, body) {\n          console.log(\"check the cloud cache\")\n          if (!error && response.statusCode == 200) {\n            console.log(body);\n            var rawData = JSON.parse(body);\n            console.log(rawData);\n            sendResult(rawData);\n          } else {\n            console.log(response);\n            send(new Error(\"data not found\"));\n          }\n        }); \n    } else{\n         send(new Error(\"Missing properties\"));\n    }\n}",
  "metadata": {
    "author": "Veselin",
    "category": "Waylay",
    "description": "",
    "documentationURL": "",
    "iconURL": "https://static.waylay.io/plugs/icons/light.png",
    "supportedStates": [
      "ON",
      "OFF",
      "RED",
      "BLUE",
      "GREEN",
      "YELLOW"
    ],
    "requiredProperties": [],
    "requiredRawData": [],
    "rawData": []
  }
}
