{
  "name": "timeSeriesSensor",
  "version": "1.0.4",
  "type": "sensor",
  "script": "var resource  = options.requiredProperties.resource || waylayUtil.getResource(options) ;\n\nvar username =  options.globalSettings.API_KEY;\nvar password = options.globalSettings.API_PASS;\nvar domain = options.requiredProperties.domain || options.globalSettings.waylay_domain || \"app.waylay.io\";\nvar metric = options.requiredProperties.metric;\n\nvar qs = {};\n\nif(options.requiredProperties.from && options.requiredProperties.from !==\"\")\n    qs.from = options.requiredProperties.from;\nif(options.requiredProperties.to && options.requiredProperties.to !==\"\")\n    qs.to = options.requiredProperties.to;\nif(options.requiredProperties.grouping && options.requiredProperties.grouping !==\"\")\n    qs.grouping = options.requiredProperties.grouping;\nif(options.requiredProperties.aggregate && options.requiredProperties.aggregate !== \"\")\n    qs.aggregate = options.requiredProperties.aggregate;\n//console.log(qs)\n\nif(metric && domain && username && password) {\n    var url = \"https://data.waylay.io/resources/\"+ resource +\"/series/\"+metric +\"?domain=\" + domain;\n    var options = {\n        url: url,\n        method: 'GET',\n        qs: qs, \n        auth: {\n            user: username,\n            password: password\n      }\n    };\n    \n    request(options, function (error, response, body) {\n      console.log(response)\n      if (!error && response.statusCode == 200) {\n        //console.log(body);\n        var data = JSON.parse(body);\n        console.log(data);\n        var value = {\n            observedState: \"Collected\",\n            rawData: data\n        };\n        send(null, value);\n        }\n    else {\n         send(null, {observedState : \"Not Collected\"});\n    }\n    }); \n   \n}else{\n  send(new Error(\"Missing property resource\"));\n}",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "Gives back the time series data.\nYou can specify from (epoch time in milliseconds) and to (it can be omitted, then it will take the current time).\nIf from is omitted it will query all data.\nYou can get data on which already grouping and/or aggregation is computed. \nAggregation:\n<ul>\n<li>mean</li> \n<li>medium</li>  \n<li>min</li> \n<li>max</li> \n<li>sum</li> \n</ul>\nGrouped by: \n<ul>\n<li>none (just skip in the query)</li>\n<li>auto</li>\n<li>second</li>\n<li>minute</li>\n<li>hour</li>\n<li>day</li>\n<li>week</li>\n</ul>\n\n",
    "documentationURL": "https://docs.waylay.io/Submitting-and-fetching-data.html#Gettingrawtimeseriesdata",
    "iconURL": "https://static.waylay.io/plugs/icons/timeseries.png",
    "supportedStates": [
      "Found",
      "Not Found"
    ],
    "requiredProperties": [
      "resource",
      "metric",
      "from",
      "to",
      "aggregate",
      "grouping",
      "domain"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "series",
        "dataType": "object[]"
      },
      {
        "parameter": "query",
        "dataType": "double"
      }
    ]
  }
}
