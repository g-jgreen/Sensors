{
  "name": "isBetweenTwoDates",
  "version": "0.0.3",
  "type": "sensor",
  "script": "var fromDate, untilDate, eventDate;\nvar now = parseInt(new Date().getTime() /1000);\n\nvar timeZone = options.requiredProperties.timeZone;\nif(!timeZone){\n    timeZone = \"Europe/Brussels\";\n}\n\nvar convertDate = function(date) {\n    if(date.split(\".\").length  === 3){\n      date = date.split(\".\");\n      date = date[2] + \"/\" + date[1] + \"/\" + date[0];\n    }\n    return moment.tz(date, \"YYYY/MM/DD\", timeZone);\n}\n\n//try get fromDate from rawdata in context, else get it from properties\ntry {\n    fromDate = waylayUtil.getRawData(options, options.requiredProperties.fromDate);\n} catch (err) {\n    fromDate = options.requiredProperties.fromDate;\n}\n if (isNaN(fromDate)) {\n        fromDate = convertDate(fromDate).unix();\n    } else {\n    fromDate = parseInt(fromDate);\n} \n\ntry {\n    untilDate = waylayUtil.getRawData(options, options.requiredProperties.untilDate);\n} catch (err) {\n    untilDate = options.requiredProperties.untilDate || (fromDate + 3600000);\n}\n\nif (isNaN(untilDate)) {\n        untilDate = convertDate(untilDate).unix();\n    } else {\n     untilDate = parseInt(untilDate);\n}\n\n\ntry {\n    eventDate = waylayUtil.getRawData(options, options.requiredProperties.eventDate);\n} catch (err) {\n    eventDate = options.requiredProperties.eventDate || now;\n}\nif (isNaN(eventDate)) {\n    eventDate = convertDate(eventDate).unix();\n} \n\nif(isNaN(fromDate) || isNaN(untilDate) || isNaN(eventDate)){\n    send(new Error(\"Error in formating\"));\n} else {\n    var state = (eventDate > fromDate && eventDate < untilDate) ? 'Between' : 'Before';\n    if (eventDate > untilDate) {\n        state = 'After';\n    }\n    \n    var value = {\n        observedState: state,\n        rawData : {\n            fromDateEpoch : fromDate,\n            untilDateEpoch : untilDate,\n            eventDate: eventDate\n        }\n        \n    };\n    send(null, value);\n}\n\n\n",
  "metadata": {
    "author": "Dan Dan",
    "category": "Time",
    "description": "returns InRange if the eventDate is between fromDate and untilDate.<br>\n",
    "iconURL": "https://static.waylay.io/plugs/icons/betweenDates.png",
    "supportedStates": [
      "Between",
      "Before",
      "After"
    ],
    "requiredProperties": [
      "fromDate",
      "untilDate",
      "eventDate",
      "timeZone"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "fromDate",
        "dataType": "string"
      },
      {
        "parameter": "untilDate",
        "dataType": "string"
      },
      {
        "parameter": "eventDate",
        "dataType": "string"
      },
      {
        "parameter": "fromDateEpoch",
        "dataType": "integer"
      },
      {
        "parameter": "untilDateEpoch",
        "dataType": "integer"
      },
      {
        "parameter": "fromDate",
        "dataType": "Date"
      },
      {
        "parameter": "untilDate",
        "dataType": "Date"
      }
    ]
  }
}
