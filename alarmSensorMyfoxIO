{"name":"alarmSensorMyfoxIO","version":"0.0.1","type":"sensor","script":"var username =  options.globalSettings.API_KEY;\nvar password = options.globalSettings.API_PASS;\nvar domain = options.requiredProperties.domain || options.globalSettings.waylay_domain ||\"app.waylay.io\";\nvar resource =  options.requiredProperties.resource || waylayUtil.getResource(options);\n\nvar sendResult = function(param){\n    console.log(\"param=\" + param);\n    var state;\n    if(param.trigger === 'securityLevel.disarmed'){\n        state = \"Security Disabled\";\n    } else if(param.trigger === 'securityLevel.partial'){\n        state = \"Security Enabled\"; //note we are not making difference here\n    } else if(param.trigger === 'securityLevel.armed'){\n        state = \"Security Enabled\";\n    } else if(param.trigger === 'trespass.window.shockOnly'){\n        state = \"Alert Risk\";\n    } else if(param.trigger === 'trespass.window.openingWithShock'){\n        state = \"Alert Trespass\";\n    } else if(param.trigger === 'trespass.window.openingWithOutShock'){\n        state = \"Alert Trespass\";\n    } else if(param.trigger === 'trespass.externalDoor.shockOnly'){\n        state = \"Alert Risk\";\n    } else if(param.trigger === 'trespass.externalDoor.openingWithShock'){\n        state = \"Alert Trespass\";\n    } else if(param.trigger === 'trespass.externalDoor.openingWithOutShock'){\n        state = \"Alert Trespass\";\n    } else if(param.trigger === 'trespass.internalDoor.shockOnly'){\n        state = \"Alert Risk\";\n    } else if(param.trigger === 'trespass.internalDoor.openingWithShock'){\n        state = \"Alert Trespass\";\n    } else if(param.trigger === 'trespass.internalDoor.openingWithOutShock'){\n        state = \"Alert Trespass\";\n    }\n    else \n        state = param.trigger;\n    \n    var value = {\n        observedState : state,\n        rawData: param\n    }\n    send(null, value);\n}\n\ntry {\n    if(domain !== undefined  && username === undefined  || password === undefined){\n        send(new Error(\"missing properites\"))\n    } else {\n        var runtimeParam = waylayUtil.getStreamData(options);\n        if(runtimeParam !== undefined){\n            console.log(\"runtime data : \" + runtimeParam);\n            sendResult(runtimeParam);\n        } else{\n            if(domain !== undefined  && username !== undefined && password !== undefined && resource !== undefined)  {\n                var url = \"https://data.waylay.io/resources/\"+ resource +\"/current?domain=\"+domain;\n                var options = {\n                    url: url,\n                    method: 'GET',\n                    auth: {\n                        user: username,\n                        password: password\n                    }\n                };\n                request(options, function (error, response, body) {\n                  console.log(\"check the cloud cache\")\n                  if (!error && response.statusCode == 200) {\n                    console.log(body);\n                    var rawData = JSON.parse(body);\n                    sendResult(rawData);\n                    } else {\n                        console.log(response);\n                        send(new Error(\"data not found\"));\n                    }\n                }); \n            } else{\n                 send(new Error(\"Missing properties\"));\n            }\n        }\n    }\n} catch(err){\n    send(new Error(err));   \n}","metadata":{"author":"Glenn","category":"Experimental","description":"","iconURL":"https://dummyimage.com/160&text=alarmSensorMyfoxIO","supportedStates":["Security Disabled","Security Enabled","Alert Risk","Alert Trespass"],"requiredProperties":["resource"],"requiredRawData":[],"rawData":[{"parameter":"rawData","dataType":"object"}]}}
