{
  "name": "getBusDelay",
  "version": "0.0.6",
  "type": "sensor",
  "script": "//curl --user DYNAcity:cReN6qF3 http://52.59.247.144:8080/server/api/v1/types\n//[\"weather\",\"reistijdenrealtime\",\"parkingrealtime\",\"Delijn-heen\",\"Delijn-terug\"]\n\n//curl --user DYNAcity:cReN6qF3 http://52.59.247.144:8080/server/api/v1/Delijn-heen/entities\n//entities: [\"lijn_70\",\"lijn_71\",\"lijn_48\",\"lijn_49\"][\n\n//curl --user DYNAcity:cReN6qF3 http://52.59.247.144:8080/server/api/v1/Delijn-heen/entities/lijn_70\n\n\nvar username = options.globalSettings.IXOR_USER || \"DYNAcity\";\nvar password = options.globalSettings.IXOR_PASSWORD || \"cReN6qF3\";\nvar basicURL = \"http://52.59.247.144:8080/server/api/v1/\";\nvar type = options.requiredProperties.type || \"Delijn-heen\";\nvar entity = options.requiredProperties.entity || \"lijn_70\"; \nvar epochCurrent = new Date().getTime();\nvar fromTime = epochCurrent - 60 * 60 * 1000; //60 minutes\nvar points = 10; //\nconsole.log(fromTime)\n\nvar url = basicURL + type + \"/\" + entity + \"?begin=\"+ fromTime +\"&end=\" + epochCurrent;\n// +\"?points=\"+points+\"&begin=\"+ fromTime + \"&end=\" + epochCurrent\n\n\ntry{\n    request({\n        \"uri\": url,\n        'auth': {\n            'user': username,\n            'pass': password,\n            'sendImmediately': false\n          }\n    }, function(err, response, body){\n        if (!err && response && response.statusCode == 200) {\n            var data = JSON.parse(body);\n            console.log(JSON.stringify(data))\n            var delays = _.find(data, function(d) {return d.attributeName =='Delay'});\n            console.log(delays)\n            var delay = parseInt(_.last(delays.data).value);\n            console.log(delay)\n            var rawData = { \n                delay : delay,\n                list: data\n            }\n            var state = \"Good\";\n            if(delay > 9)\n                state = \"Bad\"\n            if(delay > 30)\n                state = \"Terrible\"\n            send(null, {observedState: state, rawData: rawData});\n        } else {\n            console.log(response);\n            send(new Error(err));\n        }\n    });\n} catch(err){\n    send(new Error(err)); \n}\n\n",
  "metadata": {
    "author": "",
    "category": "VIM",
    "description": "For bus delays, the types can be:\n<ul>\n<li>Delijn-heen</li>\n<li>Delijn-terug</li>\n</ul>\n\nEntities for bus:\n<ul>\n<li>lijn_70</li>\n<li>lijn_71</li>\n<li>lijn_48</li>\n<li>lijn_49</li>\n</ul>",
    "iconURL": "http://www.stoswaldsuk.org/media/22621/bus-icon_200x200.jpg",
    "supportedStates": [
      "Good",
      "Bad",
      "Terrible"
    ],
    "requiredProperties": [
      "type",
      "entity"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "delay",
        "dataType": "double"
      },
      {
        "parameter": "list",
        "dataType": "object[]"
      }
    ]
  }
}
