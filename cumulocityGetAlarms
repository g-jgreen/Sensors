{
  "name": "cumulocityGetAlarms",
  "version": "0.0.3",
  "type": "sensor",
  "script": "var token = options.globalSettings.Cumulocity_Key;\nvar dateTo = options.requiredProperties.dateTo || moment().toISOString();\nvar yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nvar dateFrom = options.requiredProperties.dateFrom || moment(yesterday).toISOString();\n\n\nif(token){\n     var options = {\n        url: 'https://suathh.cumulocity.com/alarm/alarms?dateTo='+dateTo+'&dateFrom='+dateFrom,\n   \n        headers: {\n            Authorization: \"Basic \"+token,\n            Accept: \"application/json\"\n        }\n    };\n    \n    var callback = function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var bodyJson = JSON.parse(body);\n            \n            var value = {\n                rawData:bodyJson,\n                observedState : bodyJson[\"alarms\"].length > 0 ? \"Found\" : \"Not Found\"\n            };\n            \n            send(null,value);\n        }else{\n            send(new Error(\"Calling api.cumulocity failed\"));\n        }\n    }    \n    \n    request.get(options, callback);\n}else{\n    send(new Error(\"Missing token\"));\n}\n\n\n",
  "metadata": {
    "author": "Suat",
    "category": "IOT Platforms",
    "description": "cumulocityGetAlarms gives back list of alarms in rawData.\n<br>\nInput parameters are :\n<br>\n<ul>\n<li>dateFrom, ISO date format, default value is 24 hours ago</li>\n<li>dateTo, ISO date format, default date is now</li>\n</ul>",
    "documentationURL": "http://www.cumulocity.com/guides/reference/alarms/",
    "iconURL": "https://static.waylay.io/plugs/icons/cumulocity.png",
    "supportedStates": [
      "Found",
      "Not Found"
    ],
    "requiredProperties": [
      "dateFrom",
      "dateTo"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "alarms",
        "dataType": "array"
      },
      {
        "parameter": "statistics",
        "dataType": "double"
      },
      {
        "parameter": "self",
        "dataType": "double"
      }
    ]
  }
}
